{"ast":null,"code":"var _jsxFileName = \"/Users/kiahakala/Documents/awesome-cats/frontend/src/pages/NewCat.js\";\nimport { json } from \"react-router-dom\";\nimport CatForm from \"../components/CatForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewCatPage() {\n  return /*#__PURE__*/_jsxDEV(CatForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n}\n_c = NewCatPage;\nexport default NewCatPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const catData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = fetch('http://localhost:8080/cats', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(catData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save cat'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewCatPage\");","map":{"version":3,"names":["json","CatForm","NewCatPage","action","request","params","data","formData","catData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status"],"sources":["/Users/kiahakala/Documents/awesome-cats/frontend/src/pages/NewCat.js"],"sourcesContent":["import { json } from \"react-router-dom\"\nimport CatForm from \"../components/CatForm\"\n\nfunction NewCatPage() {\n\treturn (\n\t\t<CatForm />\n\t)\n}\n\nexport default NewCatPage\n\nexport async function action({ request, params }) {\n\tconst data = await request.formData()\n\n\tconst catData = {\n\t\ttitle: data.get('title'),\n\t\timage: data.get('image'),\n\t\tdate: data.get('date'),\n\t\tdescription: data.get('description')\n\t}\n\n\tconst response = fetch('http://localhost:8080/cats', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify(catData)\n\t})\n\n\tif (!response.ok) {\n\t\tthrow json({ message: 'Could not save cat' }, { status: 500 })\n\t}\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,OAAO,MAAM,uBAAuB;AAAA;AAE3C,SAASC,UAAU,GAAG;EACrB,oBACC,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAEb;AAAC,KAJQA,UAAU;AAMnB,eAAeA,UAAU;AAEzB,OAAO,eAAeC,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC/C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EAErC,MAAMC,OAAO,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACpC,CAAC;EAED,MAAMI,QAAQ,GAAGC,KAAK,CAAC,4BAA4B,EAAE;IACpDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,OAAO;EAC7B,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IACjB,MAAMrB,IAAI,CAAC;MAAEsB,OAAO,EAAE;IAAqB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/D;AACD;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}